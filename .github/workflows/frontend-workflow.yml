name: CI/CD - Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Paso 1: Clonar el código
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Obtener hash del último commit en frontend
      - name: Get last commit hash for frontend
        id: get_hash
        run: echo "IMAGE_TAG=$(git log -n 1 --pretty=format:%h -- frontend)" >> $GITHUB_ENV

      # Paso 3: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Paso 4: Instalar dependencias
      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      # Paso 5: Build de Angular
      - name: Build Angular app
        working-directory: frontend
        run: npm run build -- --configuration=production

      # Paso 6: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 7: Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Paso extra: Insertar tag de versión en index.html
      - name: Insert version in index.html
        run: |
          echo "Insertando tag de versión: $IMAGE_TAG"
          sed -i "s|</head>|<meta name=\"version\" content=\"${IMAGE_TAG}\" />\n</head>|" frontend/dist/frontend/browser/index.html

      # Paso 8: Login a Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Paso 9: Build imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest \
                       -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }} \
                       frontend

      # Paso 10: Push imagen
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }}

      # Paso 11: Checkout repo de despliegue
      - name: Checkout deploy repo
        uses: actions/checkout@v4
        with:
          repository: PaulaMilla/prueba_gps-deploy
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          path: deploy-repo

      # Paso 12: Actualizar manifiesto
      - name: Update deployment manifest image tag
        run: |
          sed -i "s|\(image: .*/frontend:\).*|\1${{ env.IMAGE_TAG }}|" deploy-repo/frontend/deployment.yaml

      # Paso 13: Commit y push con reintento
      - name: Commit and push changes with retry
        run: |
          cd deploy-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add frontend/deployment.yaml
          git commit -m "Update frontend image tag to ${{ env.IMAGE_TAG }}" || echo "No changes to commit"

          for i in {1..3}; do
            git pull --rebase && git push && break || {
              echo "Push failed, retrying in 3s... (attempt $i)"
              sleep 3
            }
          done
